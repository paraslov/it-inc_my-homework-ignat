{"version":3,"sources":["p2-homeworks/h5/HW5.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h12/HW12.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h10/bll/loadingReducer.ts","Assets/spinner-icon.gif","p2-homeworks/h10/HW10.tsx","p2-homeworks/h12/bll/themeReducer.ts","p2-homeworks/h13/api/requests_api.ts","p2-homeworks/h13/bll/request_reducer.ts","p2-homeworks/h10/bll/store.ts","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h12/HW12.tsx","p2-homeworks/h13/Request/Request.tsx","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","Message","props","className","style","messageWrapper","src","avatar","alt","angle","message","userName","name","userMessage","time","messageData","HW1","SuperButton","red","disabled","restProps","finalClassName","s","default","Affair","wrapper","item","affair","priority","width","marginTop","btn","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","margin","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","onKeyEnterPress","totalUsers","inputClass","GreetingContainer","users","addUserCallback","setName","setError","alert","length","indexOf","charCode","HW3","setUsers","updatedUsers","push","v1","console","log","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","inputValue","PreJunior","SuperSelect","options","onChangeOption","mappedOptions","op","i","SuperRadio","onChangeCallback","o","arr","HW7","homeWorkReducer","action","payload","sort","b","p","age","sortActionCreator","initialPeople","btnStyle","tableRowStyle","padding","border","borderRadius","display","justifyContent","HW8","people","setPeople","finalPeople","styleBtn","Clock","timerId","setTimerId","Date","date","setDate","show","setShow","stop","clearInterval","stringTime","getHours","getMinutes","getSeconds","stringDate","getFullYear","getMonth","getDate","height","onMouseEnter","onMouseLeave","id","window","setInterval","HW9","initState","isLoading","HW10","dispatch","useDispatch","loading","useSelector","loadingPic","setTimeout","theme","changeTheme","selectTheme","requestsAPI","axios","post","then","res","successResponse","response","btnDisabled","_setDisabled","_setResponse","selectSuccess","request","selectIsError","selectResponseMessage","selectIsBtnDisabled","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","Slider","valueLabelDisplay","aria-labelledby","HW11","value1","setValue1","value2","setValue2","marginLeft","event","newValue","Array","Junior","themesOptions","HW12","useEffect","useCallback","marginRight","Request","isError","responseMessage","isBtnDisabled","marginStyle","success","errorText","catch","requestToServer","color","HW13","JuniorPlus","PATH","Routes","path","exact","render","to","Header","headerLinks","activeClassName","activeLink","toggleControl","HW5","appWrapper","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be80d65e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"HW5_appWrapper__3oqtV\",\"headerLinks\":\"HW5_headerLinks__1TC91\",\"toggleControl\":\"HW5_toggleControl__1ClLD\",\"activeLink\":\"HW5_activeLink__242HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrapper\":\"Message_messageWrapper__1hqYg\",\"angle\":\"Message_angle__1JtA2\",\"message\":\"Message_message__3al6k\",\"userName\":\"Message_userName__VER38\",\"time\":\"Message_time__21hvf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Affairs_wrapper__Y28mq\",\"item\":\"Affairs_item__3aUad\",\"high\":\"Affairs_high__thy1Y\",\"middle\":\"Affairs_middle__3FeKC\",\"low\":\"Affairs_low__2dgUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2hd_a\",\"red\":\"SuperButton_red__1rqyr\",\"disabled\":\"SuperButton_disabled__MF14C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2Z0dg\",\"errorInput\":\"SuperInputText_errorInput__DAEw6\",\"error\":\"SuperInputText_error__q_w-c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Greeting_wrapper__2xUGS\",\"error\":\"Greeting_error__Hybys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2o179\",\"column\":\"HW4_column__2v-as\",\"testSpanError\":\"HW4_testSpanError__1KpDo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__S60XW\",\"spanClassName\":\"SuperCheckbox_spanClassName__20ACJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__31t6D\",\"dark-text\":\"HW12_dark-text__ldv5o\",\"red\":\"HW12_red__2fy4T\",\"red-text\":\"HW12_red-text__K1ZL5\",\"some\":\"HW12_some__1dNTU\",\"some-text\":\"HW12_some-text__2N1Bo\",\"myTheme\":\"HW12_myTheme__2X_IF\",\"myTheme-text\":\"HW12_myTheme-text__TLexT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3f5r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperEditableSpan_default__2X2cT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperSelect_default__YLGMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperRadio_default__2YFS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__3MLzE\"};","import React from 'react'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport {MessageType} from \"./HW1\";\r\nimport style from './Message.module.css'\r\n\r\nfunction Message(props: MessageType) {\r\n    return (\r\n        <div className={style.messageWrapper}>\r\n            <img src={props.avatar} alt=\"girl\"/>\r\n            <div className={style.angle}></div>\r\n            <div className={style.message}>\r\n                <div>\r\n                    <div className={style.userName}>{props.name}</div>\r\n                    <div className={style.userMessage}>{props.message}</div>\r\n                </div>\r\n                <div className={style.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nexport type MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst messageData: MessageType = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'NyashMyash',\r\n    message: 'How are YOU doing?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className, disabled,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n    const finalClassName = disabled ? `${s.disabled}` : `${s.default} ${red ? s.red : ''} ${className}`\r\n\r\n    return (\r\n        <button disabled={disabled}\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport s from './Affairs.module.css'\r\nimport {AffairType} from './HW2';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairPropsType = {\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.item}>{props.affair.name}</div>\r\n            <div className={`${s.item} ${s[props.affair.priority]}`}>\r\n                [{props.affair.priority}]\r\n            </div>\r\n\r\n            <SuperButton style={{width: '30px', marginTop: '10px'}} red className={s.btn} onClick={deleteCallback}>X</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairsPropsType = {\r\n    data: AffairType[]\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <SuperButton style={{margin: \"15px\", width: \"100px\"}} onClick={setAll}>All</SuperButton>\r\n            <SuperButton style={{margin: \"15px\", width: \"100px\"}} onClick={setHigh}>High</SuperButton>\r\n            <SuperButton style={{margin: \"15px\", width: \"100px\"}} onClick={setMiddle}>Middle</SuperButton>\r\n            <SuperButton style={{margin: \"15px\", width: \"100px\"}} onClick={setLow}>Low</SuperButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'middle' | 'low'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') {\r\n        return affairs\r\n    } else if (filter === 'low') {\r\n        return affairs.filter(a => a.priority === 'low')\r\n    } else if (filter === 'middle') {\r\n        return affairs.filter(a => a.priority === 'middle')\r\n    } else {\r\n        return affairs.filter(a => a.priority === 'high') // return affairs.filter(a => a.priority === filter)\r\n    }\r\n\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    /**\r\n     * class name to stylize error message\r\n     */\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${error ? s.error: ''} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : ''} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onKeyEnterPress: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, onKeyEnterPress, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : ''\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <SuperInputText value={name}\r\n                            onChange={setNameCallback}\r\n                            error={error ? error : ''}\r\n                            className={inputClass}\r\n                            onKeyPress={onKeyEnterPress}/>\r\n            <SuperButton onClick={addUser}>add</SuperButton>\r\n            <span>total users: {totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[]\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.indexOf(' ') >= 0) {\r\n            setError('Please, enter a name without spaces!')\r\n            return\r\n        } else {\r\n            setError('')\r\n        }\r\n        setName(e.currentTarget.value)\r\n    }\r\n    const addUser = () => {\r\n        if (name === '') {\r\n            setError('Enter a name, please!')\r\n            return\r\n        }\r\n        setError('')\r\n        addUserCallback(name)\r\n        alert(`Hello, ${name}!`)\r\n        setName('')\r\n    }\r\n\r\n    // onKeyEnterPress могла бы лежать в Greeting.tsx, но так как всю логику мы постарались\r\n    // отправить в контейнер, я перенёс onKeyEnterPress в GreetingContainer.tsx\r\n    const onKeyEnterPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.charCode === 13) {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            onKeyEnterPress={onKeyEnterPress}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([])\r\n    const addUserCallback = (name: string) => {\r\n        let updatedUsers = users\r\n        updatedUsers.push({_id: v1(), name: name})\r\n        setUsers(updatedUsers)\r\n        console.log(users)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'enter text plz'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    X {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false)\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false)\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true)\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.default} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        ✎ {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        let inputValue = restoreState<string>('editable-span-value', '')\r\n        setValue(inputValue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton style={{margin: \"10px\"}} onClick={save}>save</SuperButton>\r\n            <SuperButton style={{margin: \"10px\"}} onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from '../../h6/HW6';\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            Pre-junior homeworks.\r\n            <hr/>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\nimport s from './SuperSelect.module.css'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((op, i) => <option key={i} value={op}>{op}</option>) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select className={s.default} onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperRadio.module.css'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => (\r\n        <label key={name + '-' + i} className={s.default}>\r\n            <input\r\n                type={'radio'}\r\n                onChange={onChangeCallback}\r\n                name={name}\r\n                value={o}\r\n                checked={value === o}\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : []\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['Python', 'ReactJS', 'C#']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import {UserType} from '../HW8';\r\n\r\nexport const homeWorkReducer = (state: UserType[], action: ActionsType): UserType[] => {\r\n    switch (action.type) {\r\n        case 'sort': {\r\n            if(action.payload === 'up') {\r\n                return [...state].sort((a, b) => a.name < b.name ? -1 : 1)\r\n            } else {\r\n                return [...state].sort((a, b) => a.name < b.name ? 1 : -1)\r\n            }\r\n        }\r\n        case 'check': {\r\n            return state.filter((p) => p.age >= action.payload)\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof sortActionCreator> | ReturnType<typeof checkActionCreator>\r\n\r\nexport const sortActionCreator = (payload: 'up' | 'down') => ({type: 'sort', payload} as const)\r\nexport const checkActionCreator = (payload: number) => ({type: 'check', payload} as const)\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport {checkActionCreator, homeWorkReducer, sortActionCreator} from './bll/homeWorkReducer'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nexport type UserType = {\r\n    _id: number\r\n    name: string\r\n    age: number\r\n}\r\n\r\nconst initialPeople: UserType[] = [\r\n    {_id: 0, name: 'Кот', age: 3},\r\n    {_id: 1, name: 'Александр', age: 66},\r\n    {_id: 2, name: 'Коля', age: 16},\r\n    {_id: 3, name: 'Виктор', age: 44},\r\n    {_id: 4, name: 'Дмитрий', age: 40},\r\n    {_id: 5, name: 'Ирина', age: 55},\r\n]\r\n\r\nconst btnStyle = {\r\n    width: '150px',\r\n    margin: '5px'\r\n}\r\nconst tableRowStyle = {\r\n    padding:'3px',\r\n    border: '1px solid #333',\r\n    width: '150px',\r\n    borderRadius: '3px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n}\r\n\r\nfunction HW8() {\r\n    const [people, setPeople] = useState<UserType[]>(initialPeople) // need to fix any\r\n\r\n    const finalPeople = people.map(p => (\r\n        <div key={p._id} style={tableRowStyle}>\r\n            <div>{p.name}</div>\r\n            <div>{p.age}</div>\r\n        </div>\r\n    ))\r\n\r\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, sortActionCreator('up')))\r\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, sortActionCreator('down')))\r\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, checkActionCreator(18)))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 8\r\n\r\n                <div style={{margin:'5px'}}>{finalPeople}</div>\r\n\r\n                <div><SuperButton style={btnStyle} onClick={sortUp}>sort up</SuperButton></div>\r\n                <div><SuperButton style={btnStyle} onClick={sortDown}>sort down</SuperButton></div>\r\n                <div><SuperButton style={btnStyle} onClick={check18}>check 18</SuperButton></div>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativePeople/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW8\r\n","import React, {useState} from 'react'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\n\r\nconst styleBtn = {margin: '5px'}\r\n\r\nfunction Clock() {\r\n    const [timerId, setTimerId] = useState<number>(0)\r\n    const [date, setDate] = useState<Date>(new Date())\r\n    const [show, setShow] = useState<boolean>(false)\r\n\r\n    const stop = () => {\r\n        clearInterval(timerId)\r\n    }\r\n    const start = () => {\r\n        stop()\r\n        const id: number = window.setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000)\r\n        setTimerId(id)\r\n    }\r\n\r\n    const onMouseEnter = () => {\r\n        setShow(true)\r\n    }\r\n    const onMouseLeave = () => {\r\n        setShow(false)\r\n    }\r\n\r\n    const stringTime = `${date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()} :\r\n        ${date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()} :\r\n        ${date.getSeconds() < 10 ? `0${date.getSeconds()}` : date.getSeconds()}`\r\n    // const stringTime = date.toLocaleTimeString()\r\n\r\n    const stringDate = `${date.getFullYear()}.`+\r\n        `${date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1}.`+\r\n        `${date.getDate()< 10 ? `0${date.getDate()}` : date.getDate()}`\r\n    // const stringDate = date.toLocaleDateString()\r\n\r\n    return (\r\n        <div>\r\n            <div style={{height:\"50px\", margin: '10px 0 0 80px'}}>\r\n                <div\r\n                    onMouseEnter={onMouseEnter}\r\n                    onMouseLeave={onMouseLeave}\r\n                    style={{width: '90px'}}\r\n                >\r\n                    {stringTime}\r\n                </div>\r\n\r\n                {show && (\r\n                    <div>\r\n                        {stringDate}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <SuperButton style={styleBtn} onClick={start}>start</SuperButton>\r\n            <SuperButton style={styleBtn} onClick={stop}>stop</SuperButton>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock\r\n","import React from 'react'\r\nimport Clock from './Clock'\r\n\r\nfunction HW9() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 9\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Clock/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeClock/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW9\r\n","const initState = {\r\n    isLoading: false\r\n};\r\n\r\ntype InitStateType = typeof initState\r\n\r\nexport const loadingReducer = (state: InitStateType = initState, action: LoadingReducerActionsType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'LOADING': {\r\n            return {...state, isLoading: !state.isLoading};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport type LoadingReducerActionsType = ReturnType<typeof loadingAC>\r\n\r\nexport const loadingAC = () => ({type: 'LOADING'} as const);","export default __webpack_public_path__ + \"static/media/spinner-icon.07a3b34f.gif\";","import React from 'react';\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStoreType} from './bll/store';\r\nimport {Dispatch} from 'redux';\r\nimport {loadingAC, LoadingReducerActionsType} from './bll/loadingReducer';\r\nimport loadingPic from '../../Assets/spinner-icon.gif'\r\n\r\nfunction HW10() {\r\n    const dispatch = useDispatch<Dispatch<LoadingReducerActionsType>>()\r\n    const loading = useSelector((state: AppStoreType) => state.loading.isLoading);\r\n\r\n    const setLoading = () => {\r\n        dispatch(loadingAC())\r\n        setTimeout(() => dispatch(loadingAC()), 2000)\r\n        console.log('loading...');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 10\r\n\r\n            {/*should work (должно работать)*/}\r\n            {loading\r\n                ? (\r\n                    <div style={{margin: '5px 0 13px 50px'}}>\r\n                        <img style={{height: '31px', width: '31px'}} src={loadingPic} alt=\"wait for loading\"/>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <SuperButton style={{width: '150px', margin: '5px'}} onClick={setLoading}>\r\n                            set loading...\r\n                        </SuperButton>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<Alternative/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW10;\r\n","import {AppStoreType} from '../../h10/bll/store';\r\n\r\nconst initState = {\r\n    theme: 'some' as TTheme,\r\n}\r\n\r\nexport const themeReducer = (state: TThemeState = initState, action: TActions): TThemeState => { // fix any\r\n    switch (action.type) {\r\n        case 'para-slov/themeReducer/CHANGE-THEME': {\r\n            return {...state, theme: action.theme}\r\n        }\r\n        default: return state\r\n    }\r\n};\r\n\r\n//* ================================================================================================ Action Creators =>\r\nexport const changeTheme = (theme: TTheme) => ({type: 'para-slov/themeReducer/CHANGE-THEME', theme} as const)\r\n\r\n//* ================================================================================================ Selectors =====>\r\nexport const selectTheme = (state: AppStoreType) => state.theme.theme\r\n\r\n//* ================================================================================================ Types =========>\r\nexport type TTheme = 'some' | 'red' | 'dark' | 'myTheme'\r\ntype TThemeState = typeof initState\r\ntype TActions = ReturnType<typeof changeTheme>","// https://neko-cafe-back.herokuapp.com/auth/test, body: {success: true},\r\n\r\nimport axios from 'axios'\r\n\r\ntype TRequestData = {\r\n    success: boolean\r\n}\r\n\r\ntype TResponseType = {\r\n    errorText: string\r\n    info: string\r\n    yourBody: TRequestData\r\n    yourQuery: {}\r\n}\r\n\r\nexport const requestsAPI = {\r\n    postRequest(data: TRequestData) {\r\n        return axios.post<TResponseType>('https://neko-cafe-back.herokuapp.com/auth/test', data)\r\n            .then(res => res.data)\r\n    }\r\n}\r\n","import {AppStoreType} from '../../h10/bll/store';\r\nimport {Dispatch} from 'redux';\r\nimport {requestsAPI} from '../api/requests_api';\r\n\r\nconst initState = {\r\n    successResponse: false,\r\n    response: {message: '', error: false},\r\n    btnDisabled: false\r\n}\r\n\r\nexport const requestReducer = (state: TRequestState = initState, action: TActions): TRequestState => { // fix any\r\n    switch (action.type) {\r\n        case 'para-slov/requestReducer/CHANGE_SUCCESS':\r\n            return {...state, successResponse: !state.successResponse}\r\n        case 'para-slov/requestReducer/SET_RESPONSE':\r\n            return {...state, response: {...action.response}}\r\n        case 'para-slov/requestReducer/SET_DISABLED':\r\n            return {...state, btnDisabled: action.btnDisabled}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\n//* ================================================================================================ Action Creators =>\r\nexport const changeSuccess = () => ({type: 'para-slov/requestReducer/CHANGE_SUCCESS'} as const)\r\nexport const _setDisabled = (btnDisabled: boolean) =>\r\n    ({type: 'para-slov/requestReducer/SET_DISABLED', btnDisabled} as const)\r\nexport const _setResponse = (response: { message: string, error: boolean }) =>\r\n    ({type: 'para-slov/requestReducer/SET_RESPONSE', response} as const)\r\n\r\n//* ================================================================================================ Selectors =====>\r\nexport const selectSuccess = (state: AppStoreType) => state.request.successResponse\r\nexport const selectIsError = (state: AppStoreType) => state.request.response.error\r\nexport const selectResponseMessage = (state: AppStoreType) => state.request.response.message\r\nexport const selectIsBtnDisabled = (state: AppStoreType) => state.request.btnDisabled\r\n\r\n//* ================================================================================================ Thunks ========>\r\nexport const requestToServer = (successResponse: boolean) => (dispatch: Dispatch<TActions>) => {\r\n    dispatch(_setDisabled(true))\r\n    requestsAPI.postRequest({success: successResponse})\r\n        .then(data => {\r\n            dispatch(_setResponse({message: data.errorText, error: false}))\r\n            dispatch(_setDisabled(false))\r\n        })\r\n        .catch(error => {\r\n            let errorText = error.response ? error.response.data.errorText : error.message\r\n            dispatch(_setResponse({message: errorText, error: true}))\r\n            dispatch(_setDisabled(false))\r\n        })\r\n}\r\n\r\n//* ================================================================================================ Types =========>\r\ntype TRequestState = typeof initState\r\ntype TActions = ReturnType<typeof changeSuccess> | ReturnType<typeof _setResponse> | ReturnType<typeof _setDisabled>","import {loadingReducer} from \"./loadingReducer\"\r\nimport {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport {themeReducer} from '../../h12/bll/themeReducer'\r\nimport {requestReducer} from '../../h13/bll/request_reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    loading: loadingReducer,\r\n    theme: themeReducer,\r\n    request: requestReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store; // for dev\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport s from './SuperRange.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n    value?: number\r\n};\r\n\r\nconst SuperRange: React.FC<SuperRangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className, value,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'range'}\r\n                value={value}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRange;\r\n","import React from 'react';\r\nimport {Slider} from '@material-ui/core';\r\n\r\ntype SuperDoubleRangePropsType = {\r\n    onChangeRange?: (event: any, value: number | number[]) => void\r\n    value?: [number, number]\r\n    // min, max, step, disable, ...\r\n}\r\n\r\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\r\n    {\r\n        onChangeRange, value,\r\n        // min, max, step, disable, ...\r\n    }\r\n) => {\r\n    // сделать самому, можно подключать библиотеки\r\n\r\n    return (\r\n        <>\r\n            <Slider\r\n                style={{margin: '0 10px', height: '10px'}}\r\n                value={value}\r\n                onChange={onChangeRange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperDoubleRange;\r\n","import React, {useState} from 'react';\r\nimport SuperRange from './common/c7-SuperRange/SuperRange';\r\nimport SuperDoubleRange from './common/c8-SuperDoubleRange/SuperDoubleRange';\r\n\r\nfunction HW11() {\r\n    const [value1, setValue1] = useState<number>(0);\r\n    const [value2, setValue2] = useState<number>(100);\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        if (newValue instanceof Array) {\r\n            setValue1(newValue[0])\r\n            setValue2(newValue[1])\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 11\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div style={{display: 'flex', marginLeft: '10px', justifyContent: 'space-between', width: '180px'}}>\r\n                <span>{value1}</span>\r\n                <SuperRange\r\n                    onChangeRange={setValue1}\r\n                    value={value1}\r\n                />\r\n            </div>\r\n\r\n            <div style={{display: 'flex', marginLeft: '10px', justifyContent: 'space-between', width: '200px'}}>\r\n                <SuperDoubleRange\r\n                    value={[value1, value2]}\r\n                    onChangeRange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperRange/>*/}\r\n            {/*<AlternativeSuperDoubleRange/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW11;\r\n","import React from 'react'\r\nimport HW7 from '../../h7/HW7';\r\nimport HW8 from '../../h8/HW8';\r\nimport HW9 from '../../h9/HW9';\r\nimport HW10 from '../../h10/HW10';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../h10/bll/store';\r\nimport HW11 from '../../h11/HW11';\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            Junior homeworks.\r\n            <hr/>\r\n            <HW7/>\r\n            <HW8/>\r\n            <HW9/>\r\n            <Provider store={store}><HW10/></Provider>\r\n            <HW11/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React, {ChangeEvent, useCallback, useEffect} from 'react'\r\nimport s from './HW12.module.css'\r\nimport SuperSelect from '../h7/common/c5-SuperSelect/SuperSelect'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {changeTheme, selectTheme, TTheme} from './bll/themeReducer'\r\n\r\nconst themesOptions: TTheme[] = ['dark', 'red', 'some', 'myTheme']\r\n\r\nexport type THW12Props = {\r\n    theme?: TTheme\r\n}\r\n\r\nfunction HW12(props: THW12Props) {\r\n    const dispatch = useDispatch()\r\n    const theme = useSelector(selectTheme)\r\n\r\n    useEffect(() => {\r\n        if (props.theme) {\r\n            dispatch(changeTheme(props.theme))\r\n        }\r\n    }, [dispatch])\r\n\r\n    const onChangeCallback = useCallback((e: ChangeEvent<HTMLSelectElement>) =>\r\n        dispatch(changeTheme(e.currentTarget.value as TTheme)), [theme, dispatch])\r\n\r\n    return (\r\n        <div className={s[theme]}>\r\n            <hr/>\r\n            <span className={s[theme + '-text']} style={{marginRight: '10px'}}>\r\n                homeworks 12\r\n            </span>\r\n            <SuperSelect options={themesOptions}\r\n                         value={theme}\r\n                         onChange={onChangeCallback}/>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW12;\r\n","import React from 'react'\r\nimport SuperButton from '../../h4/common/c2-SuperButton/SuperButton';\r\nimport SuperCheckbox from '../../h4/common/c3-SuperCheckbox/SuperCheckbox';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n    changeSuccess,\r\n    requestToServer, selectIsBtnDisabled,\r\n    selectIsError,\r\n    selectResponseMessage,\r\n    selectSuccess\r\n} from '../bll/request_reducer';\r\n\r\n\r\nexport const Request: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const successResponse = useSelector(selectSuccess)\r\n    const isError = useSelector(selectIsError)\r\n    const responseMessage = useSelector(selectResponseMessage)\r\n    const isBtnDisabled = useSelector(selectIsBtnDisabled)\r\n    const marginStyle = {marginTop: '10px'}\r\n\r\n    const onChange = () => dispatch(changeSuccess())\r\n    const onRequest = () => dispatch(requestToServer(successResponse))\r\n\r\n    return (\r\n        <div style={marginStyle}>\r\n            <SuperButton onClick={onRequest} disabled={isBtnDisabled}>\r\n                Request\r\n            </SuperButton>\r\n            <br/>\r\n            <SuperCheckbox checked={successResponse} onChangeChecked={onChange}>\r\n                success\r\n            </SuperCheckbox>\r\n            <div style={marginStyle}>\r\n                Response:\r\n                <span style={{color: isError ? 'red' : 'mediumaquamarine'}}>\r\n                    {responseMessage}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Request} from './Request/Request';\r\n\r\n\r\nexport const HW13: React.FC = () => {\r\n    return (\r\n        <div>\r\n            homework 13\r\n            <Request/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport HW12 from '../../h12/HW12';\r\nimport {Provider} from 'react-redux';\r\nimport store from '../../h10/bll/store';\r\nimport {HW13} from '../../h13/HW13';\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <Provider store={store} >\r\n                <HW12/>\r\n                <hr/>\r\n                <HW13/>\r\n            </Provider>\r\n            {/*<HW14/>*/}\r\n            {/*<HW15/>*/}\r\n            {/*<HW16/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Error404 from './pages/Error404';\r\nimport PreJunior from './pages/PreJunior';\r\nimport Junior from './pages/Junior';\r\nimport JuniorPlus from './pages/JuniorPlus';\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            <Switch>\r\n\r\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n                {/* eslint-disable-next-line react/jsx-no-undef */}\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n\r\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './HW5.module.css'\r\nimport {PATH} from './Routes';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <div>react homeworks:</div>\r\n            <div>\r\n                <nav className={s.headerLinks}>\r\n                    <NavLink to={PATH.PRE_JUNIOR} activeClassName={s.activeLink}>pre-junior</NavLink>\r\n                    <NavLink to={PATH.JUNIOR} activeClassName={s.activeLink}>junior</NavLink>\r\n                    <NavLink to={PATH.JUNIOR_PLUS} activeClassName={s.activeLink}>junior-plus</NavLink>\r\n                    <span className={s.toggleControl}/>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\nimport s from './HW5.module.css'\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div className={s.appWrapper}>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <HashRouter>\r\n                <Header/>\r\n                <Routes/>\r\n            </HashRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <HW5/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}